# -*- mode: yaml -*-

version: 2
jobs:
  test-1.13:
    working_directory: /go/src/go.universe.tf/metallb
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run: sudo apt-get install python-pip
      - run: sudo pip install invoke semver pyyaml
      - run: echo "export GO111MODULE=on" >>$BASH_ENV
      - run: go test -short ./...
      - run: go test -short -race ./...
      - run: cp manifests/metallb.yaml manifests/metallb.yaml.prev
  lint-1.13:
    working_directory: /go/src/go.universe.tf/metallb
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - run: echo "export GO111MODULE=on" >>$BASH_ENV
      - run: curl -L https://git.io/vp6lP | sh # gometalinter
      - run: PATH=./bin:$PATH gometalinter --deadline=5m --disable-all --enable=gofmt --enable=vet --vendor ./...
  helm-lint:
    working_directory: /repo
    docker:
      - image: quay.io/helmpack/chart-testing:latest
    steps:
      - checkout
      - run: ct lint
  # FIXME: instrumenta/helm-conftest does not yet support helm v3, v2 causes tests to fail.
  #        Switch to it once https://github.com/instrumenta/helm-conftest/pull/8 is merged
  helm-conftest:
    working_directory: /repo
    docker:
      - image: alpine/helm:3.2.4
    steps:
      - run: apk add --update --no-cache git curl bash
      - run: helm plugin install --debug https://github.com/instrumenta/helm-conftest
      - checkout
      - run: helm conftest charts/metallb/ -p charts/metallb/policy/ --fail-on-warn
  deploy-controller:
    working_directory: /go/src/go.universe.tf/metallb
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get install python-pip
      - run: sudo pip install invoke semver pyyaml
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run: mkdir -p ./bin
      - run: wget -O ./bin/manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.0/manifest-tool-linux-amd64 && chmod +x ./bin/manifest-tool
      - run: echo "export GO111MODULE=on" >>$BASH_ENV
      - run: PATH=./bin:$PATH inv push-multiarch --binaries=controller --tag=${CIRCLE_BRANCH:-${CIRCLE_TAG}} --docker-user=metallb
  deploy-speaker:
    working_directory: /go/src/go.universe.tf/metallb
    docker:
      - image: circleci/golang:1.13
    steps:
      - checkout
      - setup_remote_docker
      - run: sudo apt-get install python-pip
      - run: sudo pip install invoke semver pyyaml
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - run: mkdir -p ./bin
      - run: wget -O ./bin/manifest-tool https://github.com/estesp/manifest-tool/releases/download/v1.0.0/manifest-tool-linux-amd64 && chmod +x ./bin/manifest-tool
      - run: echo "export GO111MODULE=on" >>$BASH_ENV
      - run: PATH=./bin:$PATH inv push-multiarch --binaries=speaker --tag=${CIRCLE_BRANCH:-${CIRCLE_TAG}} --docker-user=metallb
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-1.13:
          filters:
            tags:
              only: /.*/
      - lint-1.13:
          filters:
            tags:
              only: /.*/
      - helm-lint:
          filters:
            tags:
              only: /.*/
      - helm-conftest:
          filters:
            tags:
              only: /.*/
#      - deploy-controller:
#          filters:
#            branches:
#              only:
#                - main
#                - /v.*/
#            tags:
#              only: /.*/
#          requires:
#            - test-1.13
#            - lint-1.13
#      - deploy-speaker:
#          filters:
#            branches:
#              only:
#                - main
#                - /v.*/
#            tags:
#              only: /.*/
#          requires:
#            - test-1.13
#            - lint-1.13
